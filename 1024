<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>1024程序员节快乐</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Consolas', 'Monaco', monospace;
            background-color: #0a0a0a;
            color: #00ff00;
            overflow-x: hidden;
            line-height: 1.6;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            position: relative;
            z-index: 2;
        }
        
        header {
            text-align: center;
            padding: 40px 0;
            border-bottom: 1px solid #003300;
            margin-bottom: 40px;
        }
        
        h1 {
            font-size: 3rem;
            margin-bottom: 10px;
            text-shadow: 0 0 10px #00ff00;
        }
        
        .subtitle {
            font-size: 1.2rem;
            color: #00cc00;
        }
        
        .binary-rain {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }
        
        .binary-digit {
            position: absolute;
            color: #004400;
            font-size: 14px;
            animation: fall linear infinite;
        }
        
        @keyframes fall {
            to {
                transform: translateY(100vh);
            }
        }
        
        .content {
            display: flex;
            flex-direction: column;
            gap: 30px;
            margin-bottom: 40px;
        }
        
        .card {
            background-color: rgba(0, 20, 0, 0.7);
            border: 1px solid #003300;
            border-radius: 5px;
            padding: 20px;
            box-shadow: 0 0 15px rgba(0, 255, 0, 0.2);
        }
        
        .card h2 {
            color: #00cc00;
            margin-bottom: 15px;
            border-bottom: 1px solid #003300;
            padding-bottom: 10px;
        }
        
        .code-editor {
            background-color: #001100;
            border: 1px solid #003300;
            border-radius: 5px;
            padding: 15px;
            font-family: 'Consolas', monospace;
            min-height: 200px;
            overflow: auto;
        }
        
        .code-line {
            margin-bottom: 5px;
        }
        
        .comment {
            color: #008800;
        }
        
        .keyword {
            color: #00aaff;
        }
        
        .string {
            color: #00cc66;
        }
        
        .function {
            color: #ffff00;
        }
        
        .interactive {
            text-align: center;
            margin-top: 30px;
        }
        
        button {
            background-color: #003300;
            color: #00ff00;
            border: 1px solid #00cc00;
            padding: 10px 20px;
            margin: 0 10px;
            border-radius: 3px;
            cursor: pointer;
            font-family: 'Consolas', monospace;
            transition: all 0.3s;
        }
        
        button:hover {
            background-color: #004400;
            box-shadow: 0 0 10px #00ff00;
        }
        
        footer {
            text-align: center;
            padding: 20px;
            border-top: 1px solid #003300;
            margin-top: 40px;
            color: #008800;
        }
        
        .coffee {
            color: #8B4513;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 0.7; }
            50% { opacity: 1; }
            100% { opacity: 0.7;
            }
        }
        
        .blink {
            animation: blink 1s infinite;
        }
        
        @keyframes blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0; }
        }
        
        .matrix-text {
            position: absolute;
            font-size: 24px;
            color: #00ff00;
            text-shadow: 0 0 5px #00ff00;
            opacity: 0.7;
            z-index: 3;
        }
        
        .dynamic-code {
            background-color: rgba(0, 30, 0, 0.8);
            padding: 20px;
            border-radius: 5px;
            margin-top: 20px;
            border: 1px solid #005500;
        }
        
        .code-output {
            min-height: 100px;
            font-family: 'Courier New', monospace;
            color: #00ff88;
            overflow: hidden;
            white-space: pre;
        }
        
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }
            
            button {
                display: block;
                margin: 10px auto;
                width: 80%;
            }
        }
    </style>
</head>
<body>
    <div class="binary-rain" id="binaryRain"></div>
    
    <div class="container">
        <header>
            <h1>1024 程序员节</h1>
            <p class="subtitle">Happy 1024 Programmer's Day!</p>
        </header>
        
        <div class="content">
            <div class="card">
                <h2>关于1024</h2>
                <p>1024是2的10次方，二进制计数的基本计量单位之一，因此被选为程序员节。</p>
                <p>程序员就像是一个个1024，以最低调、踏实、核心的功能模块搭建起这个科技世界。</p>
                <div class="code-editor">
                    <div class="code-line"><span class="comment">// 程序员的一天</span></div>
                    <div class="code-line"><span class="keyword">while</span> (<span class="function">alive</span>()) {</div>
                    <div class="code-line">&nbsp;&nbsp;<span class="function">eat</span>();</div>
                    <div class="code-line">&nbsp;&nbsp;<span class="function">code</span>();</div>
                    <div class="code-line">&nbsp;&nbsp;<span class="function">debug</span>();</div>
                    <div class="code-line">&nbsp;&nbsp;<span class="function">drinkCoffee</span>();</div>
                    <div class="code-line">}</div>
                </div>
            </div>
            
            <div class="card">
                <h2>动态代码展示</h2>
                <div class="dynamic-code">
                    <div class="code-output" id="codeOutput"></div>
                </div>
            </div>
        </div>
        
        <div class="interactive">
            <h2>程序员节祝福生成器</h2>
            <p id="blessing">点击按钮生成专属祝福</p>
            <button onclick="generateBlessing()">生成祝福</button>
            <button onclick="fixBug()">修复BUG</button>
            <button onclick="moreEffects()">更多效果</button>
        </div>
        
        <footer>
            <p>祝所有程序员节日快乐！愿你的代码少BUG，需求少变更，咖啡永远热乎！</p>
            <p>Made with <span class="coffee">☕</span> and <span class="blink">&lt;/&gt;</span></p>
        </footer>
    </div>

    <script>
        // 创建二进制雨效果
        function createBinaryRain() {
            const binaryRain = document.getElementById('binaryRain');
            const digits = ['0', '1', 'A', 'B', 'C', 'D', 'E', 'F'];
            
            for (let i = 0; i < 300; i++) {
                const digit = document.createElement('div');
                digit.className = 'binary-digit';
                digit.textContent = digits[Math.floor(Math.random() * digits.length)];
                digit.style.left = Math.random() * 100 + 'vw';
                digit.style.animationDuration = (Math.random() * 10 + 5) + 's';
                digit.style.animationDelay = Math.random() * 5 + 's';
                digit.style.opacity = Math.random() * 0.5 + 0.1;
                digit.style.fontSize = (Math.random() * 10 + 10) + 'px';
                digit.style.color = `rgb(0, ${Math.floor(Math.random() * 100 + 100)}, 0)`;
                binaryRain.appendChild(digit);
            }
        }
        
        // 创建浮动文字效果
        function createFloatingText() {
            const texts = ['1024', 'CODE', 'DEBUG', 'BINARY', 'HEX', 'OCT', 'HELLO WORLD', 'BUG', 'FIX', 'ALGORITHM'];
            
            for (let i = 0; i < 20; i++) {
                const text = document.createElement('div');
                text.className = 'matrix-text';
                text.textContent = texts[Math.floor(Math.random() * texts.length)];
                text.style.left = Math.random() * 90 + 'vw';
                text.style.top = Math.random() * 90 + 'vh';
                text.style.fontSize = (Math.random() * 20 + 16) + 'px';
                text.style.animation = `float ${Math.random() * 10 + 10}s linear infinite`;
                
                document.body.appendChild(text);
            }
        }
        
        // 添加浮动动画
        const style = document.createElement('style');
        style.textContent = `
            @keyframes float {
                0% {
                    transform: translateY(0) rotate(0deg);
                    opacity: 0;
                }
                10% {
                    opacity: 0.7;
                }
                90% {
                    opacity: 0.7;
                }
                100% {
                    transform: translateY(-100px) rotate(360deg);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
        
        // 动态代码显示
        let codeIndex = 0;
        const codeSnippets = [
            `function fibonacci(n) {\n  if (n <= 1) return n;\n  return fibonacci(n-1) + fibonacci(n-2);\n}`,
            `const binarySearch = (arr, target) => {\n  let left = 0, right = arr.length - 1;\n  while (left <= right) {\n    let mid = Math.floor((left + right) / 2);\n    if (arr[mid] === target) return mid;\n    if (arr[mid] < target) left = mid + 1;\n    else right = mid - 1;\n  }\n  return -1;\n};`,
            `class Programmer {\n  constructor(name, language) {\n    this.name = name;\n    this.language = language;\n    this.coffeeLevel = 100;\n  }\n  \n  code() {\n    this.coffeeLevel -= 10;\n    console.log("Coding in " + this.language);\n  }\n  \n  drinkCoffee() {\n    this.coffeeLevel = 100;\n    console.log("Ahh, that's better!");\n  }\n}`,
            `// 程序员节快乐！\nfor (let i = 0; i < 1024; i++) {\n  console.log("Happy Programmer's Day!");\n}`
        ];
        
        function typeCode() {
            const output = document.getElementById('codeOutput');
            const code = codeSnippets[codeIndex];
            let i = 0;
            
            output.textContent = '';
            
            function type() {
                if (i < code.length) {
                    output.textContent += code.charAt(i);
                    i++;
                    setTimeout(type, 50);
                } else {
                    setTimeout(() => {
                        codeIndex = (codeIndex + 1) % codeSnippets.length;
                        typeCode();
                    }, 3000);
                }
            }
            
            type();
        }
        
        // 祝福语数组
        const blessings = [
            "愿你的代码没有BUG，需求永不变更！",
            "祝你的程序一次编译通过，永远不用调试！",
            "愿你的咖啡永远热乎，服务器永远在线！",
            "祝你的项目按时交付，产品经理不再改需求！",
            "愿你的技术栈永远不过时，学习之路永无止境！",
            "祝你的代码优雅如诗，性能优化到极致！",
            "愿你的数据库查询飞快，缓存永远命中！",
            "祝你的团队合作愉快，代码审查一次通过！"
        ];
        
        // 生成随机祝福
        function generateBlessing() {
            const blessingElement = document.getElementById('blessing');
            const randomIndex = Math.floor(Math.random() * blessings.length);
            blessingElement.textContent = blessings[randomIndex];
            blessingElement.style.color = '#00ff00';
        }
        
        // "修复BUG"功能
        function fixBug() {
            const blessingElement = document.getElementById('blessing');
            blessingElement.textContent = "BUG已修复！现在一切运行正常！";
            blessingElement.style.color = '#ffff00';
            
            // 添加一些视觉反馈
            document.body.style.backgroundColor = '#001100';
            setTimeout(() => {
                document.body.style.backgroundColor = '#0a0a0a';
            }, 500);
        }
        
        // 更多效果
        function moreEffects() {
            createFloatingText();
            
            // 添加闪烁效果
            const elements = document.querySelectorAll('h1, h2');
            elements.forEach(el => {
                el.style.animation = 'blink 2s infinite';
            });
            
            // 改变按钮文本
            const button = document.querySelector('button[onclick="moreEffects()"]');
            button.textContent = "效果已加载!";
            button.disabled = true;
        }
        
        // 初始化
        window.onload = function() {
            createBinaryRain();
            generateBlessing();
            typeCode();
        };
    </script>
</body>
</html>